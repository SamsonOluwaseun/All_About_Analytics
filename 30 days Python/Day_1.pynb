Day-1 of #30daysofPython
KEYWORDS IN PYTHON
True, False, None
and, or, not, is
while, for, break, return, continue, in, yield
try, except, finally, raise, assert
import, from, as, class, def, pass, global, nonlocal, lambda, del, with
DATATYPES IN PYTHON
int, float, bool, str, complex, bytes, bytearray, set, frozenset, list, tuple, range, dict, None
Most COMMONLY USED DATATYPES
IMMUTABLE DATATYPES
int
float
bool
str
tuple
MUTABLE DATATYPES
list
set
dict
range
HELLO WORLD
In [1]:
print("Hello World!")
Hello World!
In [2]:
a = "Hello World"
print(a)
Hello World
int datatype
In [3]:
a = 10
print(a)
print(type(a))
10
<class 'int'>
Base Conversions
In int method we have 3 base conversions
bin()
oct()
Hex()
Representing 15 in binary, Octal and Hexadecimal
In [5]:
a = 15
print(bin(a))
print(oct(a))
print(hex(a))
0b1111
0o17
0xf
Float Datatype
In [6]:
a = 10.0
print(type(a))
<class 'float'>
In [7]:
#Float in exponential
b = 1.2e3
print(type(b))
<class 'float'>
Bool Datatype
Bool returns :
True
False
In [9]:
a = 10
b = 20
c = a<b
print(c)
True
In [10]:
a = 10
b = 20
c = a>b
print(c)
False
Typecasting
In [11]:
a = 10
print(type(a))
print(float(a))
print(bool(a))
<class 'int'>
10.0
True
In [12]:
a = 12.66
print(type(a))
print(int(a))
print(bool(a))
<class 'float'>
12
True
In [13]:
a = 0
print(type(a))
print(float(a))
print(bool(a))
<class 'int'>
0.0
False
In [14]:
a = True
print(type(a))
print(int(a))
print(float(a))
<class 'bool'>
1
1.0
REUSING
In int type reusing is allowed from '0 to 256' only
In [16]:
x = 1
y = 1
x is y
Out[16]:
True
In [17]:
x = 0
y = 0
x is y
Out[17]:
True
In [18]:
x = 257
y = 257
x is y    #Output will be False because reusing is allowed upto 256 only
Out[18]:
False
Reusing allowed in Bool type
In [21]:
x = True
y = True
x is y
Out[21]:
True
In [22]:
x = False
y = False
x is y
Out[22]:
True
Reusing not allowed in float & complex type
In [19]:
x = 1.0
y = 1.0
x is y
Out[19]:
False
In [20]:
x = 10+2j
y = 10+2j
x is y
Out[20]:
False
