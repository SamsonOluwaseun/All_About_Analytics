import streamlit as st

########## Section 1##############################################
########## Text Display Element in Streamlit #############################

st.text("Hello Streamlit and World")


# Give your app a title
st.title("Your title")

# Headers for sessions
st.header("Main header")

# Subheader
st.subheader("Sub header")

# Markdown for other fonts
st.markdown("This is markdown **text**")
st.markdown("# Header 1")
st.markdown("## Header 2")
st.markdown("### Header 3")
st.markdown("#### Header 4")
st.markdown("##### Header 5")

# Caption
st.caption("This is a caption")

# Code Block use multilline comment here 
st.code("""import pandas as pd 
pd.read_csv(my_csv_file)"""
)

# Preformatted (text no format)
st.text("Some text")

# LaTeX for matimatical equations
st.latex("x = 2^2") 

# Divider
st.text("Text above divider")
st.divider()
st.text("Text below divider")

# st.write can take alot of argument (can display text, dataframe, image etc)
st.write("some text")



################## Section 2######################################
### Data Display element for Dataframe, Tables etc in Application
import pandas as pd
df= pd.read_csv("data/sample.csv")

# Display dataframe
st.dataframe(df) # Highly recommended for flexibility
# Or
st.write(df)

# Display as a static table
st.table(df)

# Displaying Metric
st.metric(label= "Population", value=900, delta= 20, delta_color="normal")
st.metric(label= "Employment", value=300, delta= -20, delta_color="normal")
st.metric(label= "Expenses", value=200, delta= -200, delta_color="inverse")
########################################################################################
########### Session 3 Charts Element Displaying charts and figures in Streamlit###########
import matplotlib.pyplot as plt
import pandas as pd

df= pd.read_csv("data/sample.csv")

# Streamlit line Plot
st.line_chart(df, x="year", y=["col1","col2", "col3"])

# Streamlit area chart
st.area_chart(df, x="year", y=["col1","col2"])

# Streamlit bar chart Default is stack
st.bar_chart(df, x="year", y=["col1","col2"])

# Streamlit map Works once you have the longitude and latitude
geo_df= pd.read_csv("data/sample_map.csv")
st.map(geo_df)

# Matplotlib it support third party integration
fig, ax = plt.subplots()
ax.plot(df.year, df.col1)
ax.set_title("My Figure title")
ax.set_xlabel("x Label")
ax.set_ylabel("y Label")
fig.autofmt_xdate()

st.pyplot(fig)

#########################################
############# Section 4 Input widget for interactivity #####################
import pandas as pd

# Buttons
primary_btn = st.button(label="Primary", type= "primary")
secondary_btn = st.button(label="Secondary", type= "secondary")

if primary_btn:
    st.write("Hello from Primary")

if secondary_btn:
    st.write("Hello from Secondary")
# Now we can use the botton variables for decision, because it returns 
# boolean values when clicked "True"

# Checkbox
st.divider()
checkbox = st.checkbox("Remember me")

if checkbox:
    st.write("I will remember you")
else:
    st.write("I will forget you")

# Radio buttons "so that data read will have it
st.divider()
df= pd.read_csv("data/sample.csv")
radio= st.radio("Choose a column", options = df.columns[1:], index=0, horizontal= True)
st.write(radio)
# Selectbox
st.divider()
select= st.selectbox("Choose a column", options=df.columns[1:], index= 0)
st.write(select)

# Multiselect
st.divider()
multiselect= st.multiselect("Choose as many columns as you want", options= df.columns[1:], default=['col1'],max_selections=3)
st.write(multiselect)
# Slider
st.divider()
slider = st.slider("Pick a number", min_value=0, max_value=10, value= 5, step=1)
st.write(slider)

# Text Input For comments or messages
st.divider()
text_input= st.text_input("What's your name?", placeholder="Oluwaseun")
st.write(f"Your name is {text_input}")

# Number Input
st.divider()
num_input= st.number_input("Input a number", min_value=0, max_value=10, value=0)
st.write(f"Your inputed number is {num_input}")

# Text area
st.divider()
txt_area= st.text_area("What do you want to tell me?", height=200, placeholder="Write your message here")
st.write(txt_area)
